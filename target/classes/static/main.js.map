{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/activities/activities.component.ts","./src/app/activities/activities.component.html","./src/app/activities/activity.service.ts","./src/app/activities/activity/activity.component.ts","./src/app/activities/activity/activity.component.html","./src/app/activities/creation-activity/creation-activity.component.ts","./src/app/activities/creation-activity/creation-activity.component.html","./src/app/animal-service.service.ts","./src/app/animals/animal/animal.component.ts","./src/app/animals/animal/animal.component.html","./src/app/animals/animals.component.ts","./src/app/animals/animals.component.html","./src/app/animals/creation-animal/creation-animal.component.ts","./src/app/animals/creation-animal/creation-animal.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/employee.service.ts","./src/app/employees/creation-employee/creation-employee.component.ts","./src/app/employees/creation-employee/creation-employee.component.html","./src/app/employees/employee/employee.component.ts","./src/app/employees/employee/employee.component.html","./src/app/employees/employees.component.ts","./src/app/employees/employees.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/menu-action/menu-action.component.ts","./src/app/menu-action/menu-action.component.html","./src/app/pools/creation-pool/creation-pool.component.ts","./src/app/pools/creation-pool/creation-pool.component.html","./src/app/pools/pool.service.ts","./src/app/pools/pool/pool.component.ts","./src/app/pools/pool/pool.component.html","./src/app/pools/pools.component.ts","./src/app/pools/pools.component.html","./src/app/sectors/creation-sector/creation-sector.component.ts","./src/app/sectors/creation-sector/creation-sector.component.html","./src/app/sectors/sector.service.ts","./src/app/sectors/sector/sector.component.ts","./src/app/sectors/sector/sector.component.html","./src/app/sectors/sectors.component.ts","./src/app/sectors/sectors.component.html","./src/app/species/creation-specie/creation-specie.component.ts","./src/app/species/creation-specie/creation-specie.component.html","./src/app/species/specie.service.ts","./src/app/species/specie/specie.component.ts","./src/app/species/specie/specie.component.html","./src/app/species/species.component.ts","./src/app/species/species.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {Animal} from \"../Animal\";\nimport {AnimalServiceService} from \"../animal-service.service\";\nimport {Activity} from \"./Activity\";\nimport {ActivityService} from \"./activity.service\";\n\n@Component({\n  selector: 'app-activities',\n  templateUrl: './activities.component.html',\n  styleUrls: ['./activities.component.css']\n})\nexport class ActivitiesComponent implements OnInit {\n\n  activities: Array<Activity>\n\n  constructor(private activityService: ActivityService) {\n  }\n\n  ngOnInit() {\n    this.refresh(null)\n  }\n\n  refresh($event:  Activity) {\n    this.activityService.getAll().subscribe(\n      data => this.activities = data,\n      error => console.log(error))\n  }\n}\n","<ul>\n  <li *ngFor=\" let act of activities\">\n    <app-activity [activity]=\"act\"  (onDelete)=\"refresh($event)\"></app-activity>\n  </li>\n</ul>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Animal} from \"../Animal\";\nimport {Activity} from \"./Activity\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<any> {\n    return this.http.get(\"/activity\")\n  }\n\n  save(activity: Activity): Observable<any> {\n    return this.http.post(\"/activity\", activity)\n  }\n\n  delete(activity: Activity): Observable<any> {\n    return this.http.delete(\"/activity/\" + activity.id)\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../authentication.service\";\nimport {Activity} from \"../Activity\";\nimport {ActivityService} from \"../activity.service\";\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['./activity.component.css']\n})\nexport class ActivityComponent implements OnInit {\n  @Input()\n  activity: Activity\n  @Output()\n  onDelete: EventEmitter<Activity> = new EventEmitter<Activity>();\n\n  constructor(private activityService: ActivityService, public loginService:AuthenticationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  delete() {\n    this.activityService.delete(this.activity).subscribe(\n      data => {\n        this.onDelete.emit(this.activity)\n        alert(\"Activity deleted successfully!\");\n      }\n    )\n  }\n\n}\n","<div class=\"col-md-6\">\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Name</th>\n      <th>Data</th>\n      <th>Start Time</th>\n      <th>End Time</th>\n      <th>State</th>\n      <th>Delete Activity</th>\n\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td> <b>{{activity.nameActivity.toUpperCase()}}</b></td>\n      <td> {{activity.dataCal}}</td>\n      <td> {{activity.start}}</td>\n      <td> {{activity.end}}</td>\n      <td> {{activity.state}}</td>\n      <td> <button class=\"btn btn-danger\" *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {Activity} from \"../Activity\";\nimport {ActivityService} from \"../activity.service\";\n\n@Component({\n  selector: 'app-creation-activity',\n  templateUrl: './creation-activity.component.html',\n  styleUrls: ['./creation-activity.component.css']\n})\nexport class CreationActivityComponent implements OnInit {\n\n  addActivityForm = new FormGroup({\n    nameActivity: new FormControl(\"\", Validators.required),\n    dataCal: new FormControl(\"\", Validators.required),\n    start: new FormControl(\"\", Validators.required),\n    end:  new FormControl(\"\", Validators.required),\n    state: new FormControl(\"\", Validators.required)\n  });\n  @Output()\n  onSave: EventEmitter<Activity> = new EventEmitter<Activity>();\n\n  stateType: Array<String>  = [\"PUBLIC\", \"PRIVATE\"];\n\n\n  constructor(private activityService: ActivityService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  save($event: Event) {\n    this.activityService.save(this.addActivityForm.value).subscribe(\n      data => {\n        this.onSave.emit()\n        alert(\"Activity added successfully!\");\n        this.router.navigate(['viewActivity']);\n\n      },\n      error => console.log(error)\n    )\n  }\n\n}\n","<div class=\"col-md-6\">\n  <h2>New Activity Aquarium</h2>\n  <form [formGroup]=\"addActivityForm\">\n    <div class=\"form-group\">\n      <label>\n        Add Name:\n        <input type=\"text\" formControlName=\"nameActivity\"  placeholder=\"name Activity\" name=\"nameActivity\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Add Data:\n        <input type=\"date\" formControlName=\"dataCal\"  placeholder=\"data activity\" name=\"dataCal\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Add Start Time:\n        <input type=\"time\" formControlName=\"start\"  placeholder=\"start activity\" name=\"start\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Add End Time:\n        <input type=\"time\" formControlName=\"end\"  placeholder=\"end activity\" name=\"end\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">State Activity: </label><br />\n      <select formControlName=\"state\">\n        <option *ngFor=\"let type of stateType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <button class=\"btn btn-success\" (click)=\"save($event)\" [disabled]=\"!addActivityForm.valid\">Save</button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Animal} from \"./Animal\";\r\nimport {Pool} from \"./Pool\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimalServiceService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(\"/animal\")\r\n  }\r\n\r\n/*  save(animal: Animal): Observable<any> {\r\n    return this.http.post(\"/animal\", animal)\r\n  }\r\n*/\r\n  delete(animal: Animal): Observable<any> {\r\n    return this.http.delete(\"/animal/\" + animal.id)\r\n  }\r\n  save(animal: Animal, id: number): Observable<any> {\r\n    return this.http.post(\"/animal/pool/\"+id, animal)\r\n  }\r\n\r\n}\r\n"," import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n import {Animal} from \"../../Animal\";\r\n import {AnimalServiceService} from \"../../animal-service.service\";\r\n import {AuthenticationService} from \"../../authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-animal',\r\n  templateUrl: './animal.component.html',\r\n  styleUrls: ['./animal.component.css']\r\n})\r\nexport class AnimalComponent implements OnInit {\r\n\r\n  @Input()\r\n  animal: Animal\r\n  @Output()\r\n  onDelete: EventEmitter<Animal> = new EventEmitter<Animal>();\r\n\r\n  constructor(private animalService: AnimalServiceService, public loginService:AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  delete() {\r\n    this.animalService.delete(this.animal).subscribe(\r\n      data => {\r\n        this.onDelete.emit(this.animal)\r\n        alert(\"Fish deleted successfully!\");\r\n      }\r\n    )\r\n  }\r\n}\r\n","<!--<p>Name: <b>{{animal.name.toUpperCase()}}</b>Species:  {{animal.species}} <button *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></p>-->\n<div class=\"col-md-6\">\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Name</th>\n      <th>Species</th>\n      <th>Sex</th>\n      <th>Feature</th>\n      <th>Extinction</th>\n      <th>Arrival</th>\n      <th>Departure</th>\n      <th>Life</th>\n      <th>Regime Alim.</th>\n      <th>Threat level</th>\n      <th>Pool</th>\n      <th *ngIf=\"loginService.isUserLoggedIn()\" >Delete Fish</th>\n\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td> <b>{{animal.name.toUpperCase()}}</b></td>\n      <td> {{animal.species}}</td>\n      <td> {{animal.sex}}</td>\n      <td> {{animal.feature}}</td>\n      <td> {{animal.extinction}}</td>\n      <td> {{animal.arrivalDate}}</td>\n      <td> {{animal.departureDate}}</td>\n      <td> {{animal.lifeExpectancy}}</td>\n      <td> {{animal.dietaryRegime}}</td>\n      <td> {{animal.threatLevel}}</td>\n      <td> {{animal.pool.namePool}}</td>\n      <td> <button class=\"btn btn-danger\" *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport {Animal} from \"../Animal\";\r\nimport {AnimalServiceService} from \"../animal-service.service\";\r\n\r\n@Component({\r\n  selector: 'app-animals',\r\n  templateUrl: './animals.component.html',\r\n  styleUrls: ['./animals.component.css']\r\n})\r\nexport class AnimalsComponent implements OnInit {\r\n\r\n  animals: Array<Animal>\r\n\r\n  constructor(private animalService: AnimalServiceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refresh(null)\r\n  }\r\n\r\n  refresh($event: Animal) {\r\n    this.animalService.getAll().subscribe(\r\n      data => this.animals = data,\r\n      error => console.log(error))\r\n  }\r\n\r\n}\r\n","\n<!--<app-creation-animal (onSave)=\"refresh($event)\"></app-creation-animal>-->\n<ul>\n  <li *ngFor=\" let fish of animals\">\n    <app-animal [animal]=\"fish\" (onDelete)=\"refresh($event)\"></app-animal>\n  </li>\n</ul>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Animal} from \"../../Animal\";\r\nimport {AnimalServiceService} from \"../../animal-service.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Specie} from \"../../species/Specie\";\r\nimport {SpecieService} from \"../../species/specie.service\";\r\nimport {PoolService} from \"../../pools/pool.service\";\r\nimport {Employee} from \"../../Employee\";\r\nimport {Pool} from \"../../Pool\";\r\n\r\n@Component({\r\n  selector: 'app-creation-animal',\r\n  templateUrl: './creation-animal.component.html',\r\n  styleUrls: ['./creation-animal.component.css']\r\n})\r\nexport class CreationAnimalComponent implements OnInit {\r\n    addAnimalForm = new FormGroup({\r\n    name: new FormControl(\"\", Validators.required),\r\n    species: new FormControl(\"\", Validators.required),\r\n      sex: new FormControl(\"\", Validators.required),\r\n    feature:  new FormControl(\"\", Validators.required),\r\n    extinction: new FormControl(\"\", Validators.required),\r\n    arrivalDate:new FormControl(\"\", Validators.required),\r\n    departureDate: new FormControl(\"\", Validators.required),\r\n    lifeExpectancy: new FormControl(\"\", Validators.required),\r\n      dietaryRegime:  new FormControl(\"\", Validators.required),\r\n      threatLevel:  new FormControl(\"\", Validators.required),\r\n      pool:  new FormControl(\"\", Validators.required)\r\n    });\r\n  @Output()\r\n  onSave: EventEmitter<Animal> = new EventEmitter<Animal>();\r\n\r\n\r\n  speciesType:Array<Specie>;\r\n  sexType: Array<String>  = [\"FEMALE\",\"MALE\", \"NONE\"];\r\n  levelType: Array<Number>  = [0,1,2,3,4,5,6,7,8,9,10];\r\n  lifeType: Array<Number>  = [5,10,15,20,30];\r\n  foodType: Array<String>  = [\"omnivorous\",\r\n    \"carnivore\",\r\n    \"herbivore\",\r\n    \"fishmonger\"];\r\n\r\n  constructor(private animalService: AnimalServiceService,\r\n              private specieService: SpecieService,\r\n              private  poolService: PoolService,\r\n              private router: Router) {\r\n  }\r\n  pools: Array<Pool>;\r\n  ngOnInit() {\r\n    this.callSpecies(null)\r\n    this.viewPools();\r\n  }\r\n\r\n  callSpecies($event: Specie) {\r\n    this.specieService.getAllSpecies().subscribe(\r\n      data => this.speciesType = data,\r\n      error => console.log(error))\r\n  }\r\n  private tmp: number;\r\n  save($event: Event) {\r\n    this.tmp = this.addAnimalForm.value.pool;\r\n    delete this.addAnimalForm.value.pool;\r\n    this.animalService.save(this.addAnimalForm.value, this.tmp).subscribe(\r\n      data => {\r\n        this.onSave.emit()\r\n        alert(\"Fish added successfully!\");\r\n        this.router.navigate(['viewAnimal']);\r\n\r\n      },\r\n      error => console.log(error)\r\n    )\r\n  }\r\n\r\n  viewPools(){\r\n    this.poolService.getAll().subscribe(\r\n      data => {\r\n        if(data!=null){\r\n          this.pools = data;\r\n\r\n        }\r\n\r\n      },\r\n      error => console.log(error)\r\n    )\r\n  }\r\n}\r\n","<!--<form [formGroup]=\"addAnimalForm\">\n\n  <label>\n    Add Name Animal (Fish):\n    <input type=\"text\" formControlName=\"name\">\n  </label>\n\n  <label>\n    Add Species:\n    <input type=\"text\" formControlName=\"species\">\n  </label>\n\n  <button (click)=\"save($event)\" [disabled]=\"!addAnimalForm.valid\">Save</button>\n</form>\n-->\n\n<div class=\"col-md-6\">\n  <h2>New Fish Aquarium</h2>\n  <form [formGroup]=\"addAnimalForm\">\n    <div class=\"form-group\">\n      <label>\n        Add Name Animal (Fish):\n        <input type=\"text\" formControlName=\"name\"  placeholder=\"Name Fish\" name=\"name\" class=\"form-control\">\n      </label>\n    </div>\n\n<!-- <div class=\"form-group\">\n      <label>\n        Add Species:\n\n        <input type=\"text\" formControlName=\"species\" placeholder=\"Species\" name=\"species\" class=\"form-control\">\n      </label>\n    </div>\n\n-->\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Add Species: </label><br />\n      <select formControlName=\"species\">\n        <option *ngFor=\"let type of speciesType\"\n        [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Sex: </label><br />\n      <select formControlName=\"sex\">\n        <option *ngFor=\"let type of sexType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n       Feature:\n        <input type=\"text\" formControlName=\"feature\"  placeholder=\"Feature Fish\" name=\"feature\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Extinction:\n        <input type=\"checkbox\" formControlName=\"extinction\"  placeholder=\" extinction Fish\" name=\" extinction\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Arrival Date:\n        <input type=\"date\" formControlName=\"arrivalDate\"  placeholder=\"arrivalDate\" name=\"arrivalDate\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Departure Date:\n        <input type=\"date\" formControlName=\"departureDate\"  placeholder=\"departureDate\" name=\"departureDate\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Life Expectancy: </label><br />\n      <select formControlName=\"lifeExpectancy\">\n        <option *ngFor=\"let type of lifeType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Dietary Regime: </label><br />\n      <select formControlName=\"dietaryRegime\">\n        <option *ngFor=\"let type of foodType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\"> Threat Level: </label><br />\n      <select formControlName=\"threatLevel\">\n        <option *ngFor=\"let type of levelType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Assign Pool: </label><br />\n      <select  formControlName=\"pool\">\n        <option *ngFor=\"let resp of pools\"\n                [value]=\"resp.idPool\">{{resp.namePool}}\n        </option>\n      </select>\n    </div>\n\n    <button class=\"btn btn-success\" (click)=\"save($event)\" [disabled]=\"!addAnimalForm.valid\">Save</button>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeComponent } from './employees/employee/employee.component';\r\nimport {CreationEmployeeComponent} from \"./employees/creation-employee/creation-employee.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {LogoutComponent} from \"./logout/logout.component\";\r\nimport {AnimalComponent} from \"./animals/animal/animal.component\";\r\nimport {CreationAnimalComponent} from \"./animals/creation-animal/creation-animal.component\";\r\nimport {AnimalsComponent} from \"./animals/animals.component\";\r\nimport {EmployeesComponent} from \"./employees/employees.component\";\r\nimport {SpeciesComponent} from \"./species/species.component\";\r\nimport {CreationSpecieComponent} from \"./species/creation-specie/creation-specie.component\";\r\nimport {CreationPoolComponent} from \"./pools/creation-pool/creation-pool.component\";\r\nimport {PoolsComponent} from \"./pools/pools.component\";\r\nimport {SectorService} from \"./sectors/sector.service\";\r\nimport {SectorsComponent} from \"./sectors/sectors.component\";\r\nimport {CreationSectorComponent} from \"./sectors/creation-sector/creation-sector.component\";\r\nimport {CreationActivityComponent} from \"./activities/creation-activity/creation-activity.component\";\r\nimport {ActivityComponent} from \"./activities/activity/activity.component\";\r\nimport {ActivitiesComponent} from \"./activities/activities.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'viewEmployee', component: EmployeesComponent},\r\n  { path:'createEmployee', component: CreationEmployeeComponent},\r\n  { path: 'viewAnimal', component: AnimalsComponent },\r\n  { path: 'addAnimal', component: CreationAnimalComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'logout', component: LogoutComponent },\r\n  { path:'viewSpecies', component: SpeciesComponent},\r\n  { path:'addSpecies', component: CreationSpecieComponent},\r\n  { path:'createPool', component: CreationPoolComponent},\r\n  { path:'viewPool', component: PoolsComponent},\r\n  { path:'viewSector', component:SectorsComponent},\r\n  { path:'createSector', component:CreationSectorComponent},\r\n  { path:'createActivity', component:CreationActivityComponent},\r\n  { path:'viewActivity', component:ActivitiesComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Aquarium';\n}\n","\r\n<app-menu-action></app-menu-action>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n\r\n<!--<app-animals></app-animals>-->\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AnimalComponent } from './animals/animal/animal.component';\r\nimport { CreationAnimalComponent } from './animals/creation-animal/creation-animal.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport { AnimalsComponent } from './animals/animals.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { EmployeeComponent } from './employees/employee/employee.component';\r\nimport { CreationEmployeeComponent } from './employees/creation-employee/creation-employee.component';\r\nimport { MenuActionComponent } from './menu-action/menu-action.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { EmployeesComponent } from './employees/employees.component';\nimport { SpeciesComponent } from './species/species.component';\nimport { CreationSpecieComponent } from './species/creation-specie/creation-specie.component';\nimport { SpecieComponent } from './species/specie/specie.component';\nimport { PoolsComponent } from './pools/pools.component';\nimport { PoolComponent } from './pools/pool/pool.component';\nimport { CreationPoolComponent } from './pools/creation-pool/creation-pool.component';\nimport { SectorsComponent } from './sectors/sectors.component';\nimport { CreationSectorComponent } from './sectors/creation-sector/creation-sector.component';\nimport { SectorComponent } from './sectors/sector/sector.component';\nimport { ActivitiesComponent } from './activities/activities.component';\nimport { CreationActivityComponent } from './activities/creation-activity/creation-activity.component';\nimport { ActivityComponent } from './activities/activity/activity.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AnimalComponent,\r\n    CreationAnimalComponent,\r\n    AnimalsComponent,\r\n    EmployeeComponent,\r\n    CreationEmployeeComponent,\r\n    MenuActionComponent,\r\n    LoginComponent,\r\n    LogoutComponent,\r\n    EmployeesComponent,\r\n    SpeciesComponent,\r\n    CreationSpecieComponent,\r\n    SpecieComponent,\r\n    PoolsComponent,\r\n    PoolComponent,\r\n    CreationPoolComponent,\r\n    SectorsComponent,\r\n    CreationSectorComponent,\r\n    SectorComponent,\r\n    ActivitiesComponent,\r\n    CreationActivityComponent,\r\n    ActivityComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  //sessionStorage propreties object stores data for only one session\r\n\r\n  constructor() { }\r\n\r\n  authenticate(username, password) {\r\n    if (username === \"root\" && password === \"root\") {\r\n      sessionStorage.setItem('username', username);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem('username');\r\n    console.log(!(user === null));\r\n    return !(user === null)\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.removeItem('username')\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Employee} from \"./Employee\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Animal} from \"./Animal\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(\"/employee\")\r\n  }\r\n\r\n  /*save(employee: Employee, idPool: number): Observable<any> {\r\n    return this.http.post(\"/employee/pool/\"+idPool, employee)\r\n  }*/\r\n  save(employee: Employee): Observable<any> {\r\n    return this.http.post(\"/employee\", employee)\r\n  }\r\n  delete(employee: Employee): Observable<any> {\r\n    return this.http.delete(\"/employee/\" + employee.idEmployee)\r\n  }\r\n\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {EmployeeService} from \"../../employee.service\";\nimport {Employee} from \"../../Employee\";\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Pool} from \"../../Pool\";\nimport {PoolService} from \"../../pools/pool.service\";\nimport {Sector} from \"../../sectors/Sector\";\n\n\n@Component({\n  selector: 'app-creation-employee',\n  templateUrl: './creation-employee.component.html',\n  styleUrls: ['./creation-employee.component.css']\n})\nexport class CreationEmployeeComponent implements OnInit {\n\n  addEmployeeForm = new FormGroup({\n    name: new FormControl(\"\", Validators.required),\n    designation: new FormControl(\"\", Validators.required),\n    surname:new FormControl(\"\", Validators.required),\n    numSecSocial: new FormControl(\"\", Validators.required),\n   // poolResponsable: new FormControl(\"\", Validators.required),\n    birthday: new FormControl(\"\", Validators.required)\n\n  });\n  @Output()\n  onSave: EventEmitter<Employee> = new EventEmitter<Employee>()\n  designationType: Array<String>  = [\"WORKER\",\"RESPONSABLE\"];\n  pools: Array<Pool>;\n  constructor(private employeeService: EmployeeService, private poolService:PoolService,  private router: Router) {\n  }\n\n  ngOnInit() {\n    this.viewPool();\n  }\n  private tmp: number;\n  save($event: Event) {//add path\n   // this.tmp = this.addEmployeeForm.value.poolResponsable;\n  //  delete this.addEmployeeForm.value.poolResponsable;\n    this.employeeService.save(this.addEmployeeForm.value).subscribe(\n   // this.employeeService.save(this.addEmployeeForm.value, this.tmp).subscribe(\n      data => {\n        this.onSave.emit()\n        alert(\"Employee Aquarium created successfully!\");\n        this.router.navigate(['viewEmployee']);\n\n      },\n      error => console.log(error)\n    )\n  }\n  viewPool(){\n    this.poolService.getAll().subscribe(\n      data => {\n        if(data!=null){\n          this.pools = data;\n\n        }\n\n      },\n      error => console.log(error)\n    )\n  }\n}\n","<div class=\"col-md-6\">\n  <h2>New Employee Aquarium</h2>\n  <form [formGroup]=\"addEmployeeForm\">\n    <div class=\"form-group\">\n      <label>\n        Name:\n        <input type=\"text\" formControlName=\"name\"  placeholder=\"Name new employee\" name=\"name\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Surname:\n        <input type=\"text\" formControlName=\"surname\"  placeholder=\"Surname new employee\" name=\"surname\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Num. Sec. Social:\n        <input type=\"text\" formControlName=\"numSecSocial\"  placeholder=\"add numero sec.sociale\" name=\"numSecSocial\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Birthday:\n        <input type=\"date\" formControlName=\"birthday\"  placeholder=\"add date born\" name=\"birthday\" class=\"form-control\">\n      </label>\n    </div>\n\n  <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Assign Role: </label><br />\n      <select formControlName=\"designation\">\n        <option *ngFor=\"let type of designationType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n   <!-- <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Assign Pool: </label><br />\n      <select  formControlName=\"poolResponsable\">\n        <option *ngFor=\"let resp of pools\"\n                [value]=\"resp.idPool\">{{resp.namePool}}\n        </option>\n      </select>\n    </div>-->\n\n    <button class=\"btn btn-success\" (click)=\"save($event)\" [disabled]=\"!addEmployeeForm.valid\">Save</button>\n  </form>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Employee} from \"../../Employee\";\nimport {EmployeeService} from \"../../employee.service\";\nimport {AuthenticationService} from \"../../authentication.service\";\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  @Input()\n  employee: Employee;\n  @Output()\n  onDelete: EventEmitter<Employee> = new EventEmitter<Employee>();\n\n  constructor(private employeeService: EmployeeService, public loginService:AuthenticationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  delete() {\n    this.employeeService.delete(this.employee).subscribe(\n      data => {\n        this.onDelete.emit(this.employee)\n        alert(\"Employee deleted successfully!\");\n      }\n    )\n  }\n\n}\n","<div class=\"col-md-6\">\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Name</th>\n      <th>Surname</th>\n      <th>Birthday</th>\n      <th>Num.sec.Social</th>\n      <th>Role</th>\n      <th>Pool</th>\n      <th>Delete Employee</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td> <b>{{employee.name.toUpperCase()}}</b></td>\n      <td> {{employee.surname}}</td>\n      <td> {{employee.birthday}}</td>\n      <td> {{employee.numSecSocial}}</td>\n      <td> {{employee.designation}}</td>\n      <td>\n      <ul>\n          <li *ngFor=\" let pool of employee.poolResponsable\">\n            {{pool.namePool}}\n          </li>\n        </ul>\n       <!-- {{employee.poolResponsable.namePool}}-->\n      </td>\n      <td> <button class=\"btn btn-danger\" *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Employee} from \"../Employee\";\nimport {EmployeeService} from \"../employee.service\";\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  employees: Array<Employee>;\n\n  constructor(private employeeService: EmployeeService) {\n  }\n\n  ngOnInit() {\n    this.refresh(null)\n  }\n\n  refresh($event: Employee) {\n    this.employeeService.getAll().subscribe(\n      data => this.employees = data,\n      error => console.log(error))\n  }\n}\n","<body>\n<ul>\n  <li *ngFor=\" let employee of employees\">\n    <app-employee [employee]=\"employee\" (onDelete)=\"refresh($event)\"></app-employee>\n  </li>\n</ul>\n\n</body>\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthenticationService} from \"../authentication.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username = '';\r\n  password = '';\r\n  invalidLogin = false;\r\n\r\n  constructor(private router: Router, private loginservice: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  checkLogin() {\r\n    if (this.loginservice.authenticate(this.username, this.password) ) { //call method service\r\n      this.router.navigate(['']);\r\n      this.invalidLogin = false  //login valid\r\n    } else\r\n      this.invalidLogin = true   //login Invalid\r\n  }\r\n}\r\n","<!-- add dialogbox login -->\r\n<div class=\"container\">\r\n  <div class=\"form-group\">\r\n    UserName : <label>\r\n    <input type=\"text\" name=\"username\" [(ngModel)]=\"username\">\r\n  </label>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    Password : <label>\r\n    <input type=\"password\" name=\"password\" [(ngModel)]=\"password\">\r\n  </label>\r\n  </div>\r\n  <button (click)=checkLogin() class=\"btn btn-success\"> Login </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationService} from \"../authentication.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.authenticationService.logOut();   //call logOut method of service\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationService} from \"../authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-menu-action',\r\n  templateUrl: './menu-action.component.html',\r\n  styleUrls: ['./menu-action.component.css']\r\n})\r\nexport class MenuActionComponent implements OnInit {\r\n\r\n  constructor(public loginService:AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n  <!--<nav class =\"navbar navbar-expand-md navbar-dark bg-dark\">-->\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div><a href=\"\" class=\"navbar-brand\">Aquarium App</a></div>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n   <!-- <ul class=\"navbar-nav\">-->\r\n      <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/viewEmployee\" class=\"nav-link\">Employees</a></li>\r\n      <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/createEmployee\" class=\"nav-link\">Add Employee </a></li>\r\n      <li><a  routerLink=\"/viewPool\" class=\"nav-link\">Pool</a></li>\r\n      <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/createPool\" class=\"nav-link\">Add Pool </a></li>\r\n      <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/addAnimal\" class=\"nav-link\">Add Fish </a></li>\r\n\r\n      <li><a  routerLink=\"/viewAnimal\" class=\"nav-link\">Fish</a></li>\r\n      <li><a  routerLink=\"/viewSpecies\" class=\"nav-link\">Species Fish</a></li>\r\n      <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/addSpecies\" class=\"nav-link\">Add Species</a></li>\r\n\r\n        <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/createSector\" class=\"nav-link\">Add Sector</a></li>\r\n        <li><a  routerLink=\"/viewSector\" class=\"nav-link\">Sectors</a></li>\r\n        <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/createActivity\" class=\"nav-link\">Add Activity</a></li>\r\n        <li><a  routerLink=\"/viewActivity\" class=\"nav-link\">Activity</a></li>\r\n        <li><a *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/logout\" class=\"nav-link\">Logout</a></li>\r\n        <li><a *ngIf=\"!loginService.isUserLoggedIn()\" routerLink=\"/login\" class=\"nav-link\">Login</a></li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n\r\n\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Employee} from \"../../Employee\";\nimport {EmployeeService} from \"../../employee.service\";\nimport {Router} from \"@angular/router\";\nimport {Pool} from \"../../Pool\";\nimport {PoolService} from \"../pool.service\";\nimport {Sector} from \"../../sectors/Sector\";\nimport {SectorService} from \"../../sectors/sector.service\";\n\n\n@Component({\n  selector: 'app-creation-pool',\n  templateUrl: './creation-pool.component.html',\n  styleUrls: ['./creation-pool.component.css']\n})\nexport class CreationPoolComponent implements OnInit {\n\n  addPoolForm = new FormGroup({\n    namePool: new FormControl(\"\", Validators.required),\n    state: new FormControl(\"\", Validators.required),\n    volume: new FormControl(\"\", Validators.required),\n    responsable: new FormControl(\"\", Validators.required),\n    poolSector: new FormControl(\"\", Validators.required)\n  });\n  @Output()\n  onSave: EventEmitter<Pool> = new EventEmitter<Pool>();\n  stateType: Array<String>  = [\"CLEAN\",\"DIRTY\"];\n  volumeType: Array<Number> = [5,10,20,30,40,50]; //capacity 5 to 50\n  responsable_employees: Array<Employee>;\n  sectors: Array<Sector>;\n  private tmp: number;\n  private tmpSec: number;\n  constructor(private employeeService: EmployeeService, private sectorService: SectorService, private poolService: PoolService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.viewEmployees();\n    this.viewSectors();\n  }\n\n  save($event: Event) {\n    //console.log(\"idEMployee :\" +  this.addPoolForm.value.responsable);\n    this.tmp = this.addPoolForm.value.responsable;\n    delete this.addPoolForm.value.responsable;\n    this.tmpSec = this.addPoolForm.value.poolSector;\n    delete this.addPoolForm.value.poolSector;\n\n   // console.log(\"postIdEMpl:\" +  this.addPoolForm.value.responsable);\n    //console.log(\"tmp :\" +  this.tmp);\n    this.poolService.save(this.addPoolForm.value, this.tmp, this.tmpSec).subscribe(\n      data => {\n        this.onSave.emit();\n        alert(\"Pool Aquarium created successfully!\");\n        this.router.navigate(['viewPool']);\n      },\n      error => console.log(error)\n    )\n  }\n\n  viewEmployees(){\n    this.employeeService.getAll().subscribe(\n      data => {\n          if(data!=null){\n            this.responsable_employees = data;\n\n          }\n\n      },\n      error => console.log(error)\n    )\n  }\n\n  viewSectors(){\n    this.sectorService.getAll().subscribe(\n      data => {\n        if(data!=null){\n          this.sectors = data;\n\n        }\n\n      },\n      error => console.log(error)\n    )\n  }\n}\n","<div class=\"col-md-6\">\n  <h2 >NEW POOL</h2>\n  <form [formGroup]=\"addPoolForm\">\n    <div class=\"form-group\">\n      <label>\n        Name new Pool:\n        <input type=\"text\" formControlName=\"namePool\"  placeholder=\"Name Pool\" name=\"namePool\" class=\"form-control\">\n      </label>\n    </div>\n\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">State: </label><br />\n      <select formControlName=\"state\">\n        <option *ngFor=\"let type of stateType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Capacity Max: </label><br />\n      <select formControlName=\"volume\">\n        <option *ngFor=\"let type of volumeType\"\n                [value]=\"type\">{{type}}\n        </option>\n      </select>\n    </div>\n\n <div class=\"column small-12 large-2\">\n    <label class=\"sbw_light\">Employee Responsable: </label><br />\n    <select  formControlName=\"responsable\">\n      <option *ngFor=\"let resp of responsable_employees\"\n              [value]=\"resp.idEmployee\">{{resp.name}}\n      </option>\n    </select>\n  </div>\n\n    <div class=\"column small-12 large-2\">\n      <label class=\"sbw_light\">Sector: </label><br />\n      <select  formControlName=\"poolSector\">\n        <option *ngFor=\"let sector of sectors\"\n                [value]=\"sector.id\">{{sector.name}}\n        </option>\n      </select>\n    </div>\n\n<button class=\"btn btn-success\" (click)=\"save($event)\" [disabled]=\"!addPoolForm.valid\">Save</button>\n</form>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Specie} from \"../species/Specie\";\nimport {Pool} from \"../Pool\";\nimport {Employee} from \"../Employee\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoolService {\n\n  constructor(private http: HttpClient) {\n  }\n  getAll(): Observable<any> {\n    return this.http.get(\"/pool\")\n  }\n\n\n\n  save(pool: Pool, id: number, idSec:number): Observable<any> {\n    return this.http.post(\"/pool/employee/\"+id+\"/sector/\"+idSec, pool)\n  }\n\n\n  delete(pool: Pool): Observable<any> {\n    return this.http.delete(\"/pool/\" + pool.idPool)\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Animal} from \"../../Animal\";\nimport {AnimalServiceService} from \"../../animal-service.service\";\nimport {AuthenticationService} from \"../../authentication.service\";\nimport {Pool} from \"../../Pool\";\nimport {PoolService} from \"../pool.service\";\n\n@Component({\n  selector: 'app-pool',\n  templateUrl: './pool.component.html',\n  styleUrls: ['./pool.component.css']\n})\nexport class PoolComponent implements OnInit {\n\n  @Input()\n  pool: Pool\n  @Output()\n  onDelete: EventEmitter<Pool> = new EventEmitter<Pool>();\n\n  constructor(private poolService: PoolService, public loginService:AuthenticationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  delete() {\n    this.poolService.delete(this.pool).subscribe(\n      data => {\n        this.onDelete.emit(this.pool)\n        alert(\"Pool deleted successfully!\");\n      }\n    )\n  }\n}\n\n\n\n","<div class=\"col-md-6\">\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Name</th>\n      <th>State</th>\n      <th>Capacity</th>\n      <th>Responsable</th>\n      <th>Sector</th>\n      <th>Delete Pool</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td> <b>{{pool.namePool.toUpperCase()}}</b></td>\n      <td> {{pool.state}}</td>\n      <td> {{pool.volume}}</td>\n      <td> {{pool.responsable.name}}</td>\n      <td>{{pool.poolSector.name}}, {{pool.poolSector.localitation}} </td>\n\n      <td> <button class=\"btn btn-danger\" *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Animal} from \"../Animal\";\nimport {Pool} from \"../Pool\";\nimport {AnimalServiceService} from \"../animal-service.service\";\nimport {PoolService} from \"./pool.service\";\n\n@Component({\n  selector: 'app-pools',\n  templateUrl: './pools.component.html',\n  styleUrls: ['./pools.component.css']\n})\nexport class PoolsComponent implements OnInit {\n  pools: Array<Pool>\n\n  constructor(private poolService: PoolService) {\n  }\n  ngOnInit() {\n    this.refresh(null)\n  }\n\n  refresh($event: Pool) {\n    this.poolService.getAll().subscribe(\n      data => this.pools = data,\n      error => console.log(error))\n  }\n}\n","<ul>\n  <li *ngFor=\" let pool of pools\">\n    <app-pool [pool]=\"pool\" (onDelete)=\"refresh($event)\"></app-pool>\n  </li>\n</ul>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Employee} from \"../../Employee\";\nimport {EmployeeService} from \"../../employee.service\";\nimport {Router} from \"@angular/router\";\nimport {Sector} from \"../Sector\";\nimport {SectorService} from \"../sector.service\";\n\n@Component({\n  selector: 'app-creation-sector',\n  templateUrl: './creation-sector.component.html',\n  styleUrls: ['./creation-sector.component.css']\n})\nexport class CreationSectorComponent implements OnInit {\n\n\n  addSectorForm = new FormGroup({\n    name: new FormControl(\"\", Validators.required),\n    localitation: new FormControl(\"\", Validators.required)\n  });\n  @Output()\n  onSave: EventEmitter<Sector> = new EventEmitter<Sector>()\n\n  constructor(private sectorService:SectorService,  private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  save($event: Event) {\n    this.sectorService.save(this.addSectorForm.value).subscribe(\n      data => {\n        this.onSave.emit()\n        alert(\"Sector Aquarium created successfully!\");\n        this.router.navigate(['viewSector']);\n\n      },\n      error => console.log(error)\n    )\n  }\n}\n","<div class=\"col-md-6\">\n  <h2>Sector Aquarium</h2>\n  <form [formGroup]=\"addSectorForm\">\n    <div class=\"form-group\">\n      <label>\n        Add name:\n        <input type=\"text\" formControlName=\"name\"  placeholder=\"Name new sector\" name=\"name\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Add Localitation:\n        <input type=\"text\" formControlName=\"localitation\" placeholder=\"Localitation sector\" name=\"localitation\" class=\"form-control\">\n      </label>\n    </div>\n    <button class=\"btn btn-success\" (click)=\"save($event)\" [disabled]=\"!addSectorForm.valid\">Save</button>\n  </form>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Sector} from \"./Sector\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectorService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<any> {\n    return this.http.get(\"/sector\")\n  }\n\n  save(sector: Sector): Observable<any> {\n    return this.http.post(\"/sector\", sector)\n  }\n\n  delete(sector: Sector): Observable<any> {\n    return this.http.delete(\"/sector/\" + sector.id)\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Employee} from \"../../Employee\";\nimport {EmployeeService} from \"../../employee.service\";\nimport {AuthenticationService} from \"../../authentication.service\";\nimport {Sector} from \"../Sector\";\nimport {CreationSectorComponent} from \"../creation-sector/creation-sector.component\";\nimport {SectorService} from \"../sector.service\";\n\n@Component({\n  selector: 'app-sector',\n  templateUrl: './sector.component.html',\n  styleUrls: ['./sector.component.css']\n})\nexport class SectorComponent implements OnInit {\n\n  @Input()\n  sector: Sector;\n  @Output()\n  onDelete: EventEmitter<Sector> = new EventEmitter<Sector>();\n\n  constructor(private sectorService: SectorService, public loginService:AuthenticationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  delete() {\n    //console.log(\"sector delete: \" + this.sector)\n    this.sectorService.delete(this.sector).subscribe(\n      data => {\n        this.onDelete.emit(this.sector)\n        alert(\"Sector deleted successfully!\");\n      }\n    )\n  }\n\n}\n","<div class=\"col-md-6\">\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Name</th>\n      <th>Localitation</th>\n      <th>Delete Sector</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td> <b>{{sector.name.toUpperCase()}}</b></td>\n      <td> {{sector.localitation}}</td>\n      <td> <button class=\"btn btn-danger\" *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Employee} from \"../Employee\";\nimport {EmployeeService} from \"../employee.service\";\nimport {SectorService} from \"./sector.service\";\nimport {Sector} from \"./Sector\";\n\n@Component({\n  selector: 'app-sectors',\n  templateUrl: './sectors.component.html',\n  styleUrls: ['./sectors.component.css']\n})\nexport class SectorsComponent implements OnInit {\n\n  sectors: Array<Sector>;\n\n  constructor(private sectorService: SectorService) {\n  }\n\n  ngOnInit() {\n    this.refresh(null)\n  }\n\n  refresh($event: Sector) {\n    console.log(\"getAll sector: \"+ this.sectorService.getAll())\n    this.sectorService.getAll().subscribe(\n      data => this.sectors = data,\n      error => console.log(error))\n  }\n\n}\n","<ul>\n  <li *ngFor=\" let s of sectors\">\n    <app-sector [sector]=\"s\" (onDelete)=\"refresh($event)\"></app-sector>\n  </li>\n</ul>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {Specie} from \"../Specie\";\nimport {SpecieService} from \"../specie.service\";\n\n@Component({\n  selector: 'app-creation-specie',\n  templateUrl: './creation-specie.component.html',\n  styleUrls: ['./creation-specie.component.css']\n})\nexport class CreationSpecieComponent implements OnInit {\n\n  addSpecieForm = new FormGroup({\n    nameSpecies: new FormControl(\"\", Validators.required),\n    description: new FormControl(\"\", Validators.required)\n  });\n  @Output()\n  onSave: EventEmitter<Specie> = new EventEmitter<Specie>();\n\n  constructor(private specieService: SpecieService,  private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  save($event: Event) {\n    this.specieService.save(this.addSpecieForm.value).subscribe(\n      data => {\n        this.onSave.emit()\n        alert(\"Species added successfully!\");\n        this.router.navigate(['viewSpecies']);\n\n      },\n      error => console.log(error)\n    )\n  }\n\n}\n","<div class=\"col-md-6\">\n  <h2>New Species Animal Aquarium</h2>\n  <form [formGroup]=\"addSpecieForm\">\n    <div class=\"form-group\">\n      <label>\n        Add Species (Fish):\n        <input type=\"text\" formControlName=\"nameSpecies\"  placeholder=\"Species Fish\" name=\"nameSpecies\" class=\"form-control\">\n      </label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>\n        Add Description:\n        <input type=\"text\" formControlName=\"description\" placeholder=\"Description\" name=\"description\" class=\"form-control\">\n      </label>\n    </div>\n    <button class=\"btn btn-success\" (click)=\"save($event)\" [disabled]=\"!addSpecieForm.valid\">Save</button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Specie} from \"./Specie\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpecieService {\n\n  constructor(private http: HttpClient) {\n  }\n  getAll(): Observable<any> {\n    return this.http.get(\"/species\")\n  }\n\n  getAllSpecies(): Observable<any> {\n    return this.http.get(\"/animal/species\")\n  }\n\n  save(species: Specie): Observable<any> {\n    return this.http.post(\"/species\", species)\n  }\n\n  delete(species: Specie): Observable<any> {\n    return this.http.delete(\"/species/\" + species.idSpecies)\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from \"../../authentication.service\";\nimport {Specie} from \"../Specie\";\nimport {SpecieService} from \"../specie.service\";\n\n@Component({\n  selector: 'app-specie',\n  templateUrl: './specie.component.html',\n  styleUrls: ['./specie.component.css']\n})\nexport class SpecieComponent implements OnInit {\n  @Input()\n  specie: Specie;\n  @Output()\n  onDelete: EventEmitter<Specie> = new EventEmitter<Specie>();\n\n  constructor(private specieService: SpecieService, public loginService:AuthenticationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  delete() {\n    this.specieService.delete(this.specie).subscribe(\n      data => {\n        this.onDelete.emit(this.specie);\n        alert(\"Specie deleted successfully!\");\n      }\n    )\n  }\n\n}\n","<div class=\"col-md-6\">\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Name Species</th>\n      <th>Description</th>\n      <th>Number animal</th>\n      <th>Delete Specie</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n      <td> <b>{{specie.nameSpecies}}</b></td>\n      <td> {{specie.description}}</td>\n      <td> {{specie.numberAnimals}}</td>\n      <td> <button class=\"btn btn-danger\" *ngIf=\"loginService.isUserLoggedIn()\" (click)=\"delete()\"> Delete </button></td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Specie} from \"./Specie\";\nimport {SpecieService} from \"./specie.service\";\nimport {Animal} from \"../Animal\";\n\n@Component({\n  selector: 'app-species',\n  templateUrl: './species.component.html',\n  styleUrls: ['./species.component.css']\n})\nexport class SpeciesComponent implements OnInit {\n  species: Array<Specie>\n // @Output()\n // callSpecies: EventEmitter<Array<Specie>> = new EventEmitter<Array<Specie>>();\n  constructor(private specieService: SpecieService) { }\n\n  ngOnInit() {\n    this.refresh(null)\n  }\n\n  refresh($event: Specie) {\n    this.specieService.getAll().subscribe(\n      data => this.species = data,\n      error => console.log(error))\n  }\n\n  //call(){}\n\n}\n","<ul>\n  <li *ngFor=\" let fishSpecie of species\">\n    <app-specie [specie]=\"fishSpecie\" (onDelete)=\"refresh($event)\"></app-specie>\n  </li>\n</ul>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}